"use strict";(globalThis.webpackChunkmydocs=globalThis.webpackChunkmydocs||[]).push([[1300],{1693:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"Data-model/domain-and-data-shapes","title":"Domain and Data Shapes","description":"Purpose","source":"@site/docs/Data-model/domain-and-data-shapes.md","sourceDirName":"Data-model","slug":"/Data-model/domain-and-data-shapes","permalink":"/brs-rmm-ai-documentation/docs/Data-model/domain-and-data-shapes","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Data-model/domain-and-data-shapes.md","tags":[{"inline":true,"label":"domain-modeling","permalink":"/brs-rmm-ai-documentation/docs/tags/domain-modeling"},{"inline":true,"label":"data-structures","permalink":"/brs-rmm-ai-documentation/docs/tags/data-structures"},{"inline":true,"label":"entities","permalink":"/brs-rmm-ai-documentation/docs/tags/entities"},{"inline":true,"label":"api-shapes","permalink":"/brs-rmm-ai-documentation/docs/tags/api-shapes"},{"inline":true,"label":"serialization","permalink":"/brs-rmm-ai-documentation/docs/tags/serialization"}],"version":"current","lastUpdatedBy":"Hair","lastUpdatedAt":1761836475000,"frontMatter":{"status":"draft","lastReviewed":"2025-10-08T00:00:00.000Z","owner":"members-module-team","category":"data-model","tags":["domain-modeling","data-structures","entities","api-shapes","serialization"]},"sidebar":"dataModelSidebar","next":{"title":"Value Objects","permalink":"/brs-rmm-ai-documentation/docs/Data-model/value-objects"}}');var t=i(4848),s=i(8453);const l={status:"draft",lastReviewed:new Date("2025-10-08T00:00:00.000Z"),owner:"members-module-team",category:"data-model",tags:["domain-modeling","data-structures","entities","api-shapes","serialization"]},r="Domain and Data Shapes",o={},d=[{value:"Purpose",id:"purpose",level:2},{value:"When You Need This",id:"when-you-need-this",level:2},{value:"Context / Diagram",id:"context--diagram",level:2},{value:"Key Concepts",id:"key-concepts",level:2},{value:"Flow / Sequence",id:"flow--sequence",level:2},{value:"Rules &amp; Constraints",id:"rules--constraints",level:2},{value:"Minimal Example",id:"minimal-example",level:2},{value:"Common Pitfalls",id:"common-pitfalls",level:2},{value:"See Also",id:"see-also",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"domain-and-data-shapes",children:"Domain and Data Shapes"})}),"\n",(0,t.jsx)(n.h2,{id:"purpose",children:"Purpose"}),"\n",(0,t.jsx)(n.p,{children:"Provide a consistent vocabulary and minimal set of data abstractions (Value Objects, Collections, View Models) for representing member, booking, and configuration data sourced exclusively from external APIs."}),"\n",(0,t.jsx)(n.h2,{id:"when-you-need-this",children:"When You Need This"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Designing a new API integration"}),"\n",(0,t.jsx)(n.li,{children:"Deciding whether to introduce a new Value Object"}),"\n",(0,t.jsx)(n.li,{children:"Reviewing PRs for data modeling consistency"}),"\n",(0,t.jsx)(n.li,{children:"Mapping raw API payloads into internal immutable structures"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"context--diagram",children:"Context / Diagram"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"BRS API JSON \u2192 Normalization \u2192 Value Objects \u2192 Collections \u2192 View Model \u2192 Presentation\n"})}),"\n",(0,t.jsx)(n.h2,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Raw Payload: Untouched associative array returned by external API"}),"\n",(0,t.jsx)(n.li,{children:"Normalization: Minimal transformation (key renaming, date parsing) before VO creation"}),"\n",(0,t.jsx)(n.li,{children:"Value Object (VO): Immutable semantic wrapper for a single conceptual entity"}),"\n",(0,t.jsx)(n.li,{children:"Collection VO: Typed iterable of homogeneous Value Objects with convenience methods"}),"\n",(0,t.jsx)(n.li,{children:"View Model: Aggregated structure organized for rendering or JSON serialization"}),"\n",(0,t.jsx)(n.li,{children:"Shape Stability: Minimizing future churn by introducing clear boundaries early"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"flow--sequence",children:"Flow / Sequence"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Repository retrieves raw JSON from external API"}),"\n",(0,t.jsx)(n.li,{children:"Repository normalizes keys (e.g., snake_case \u2192 camelCase) & coerces primitive types (dates, ints)"}),"\n",(0,t.jsxs)(n.li,{children:["Static constructor (",(0,t.jsx)(n.code,{children:"fromApiResponse"}),") of VO validates required fields & builds immutable object"]}),"\n",(0,t.jsxs)(n.li,{children:["Collections wrap arrays of VO instances and expose query helpers (e.g., ",(0,t.jsx)(n.code,{children:"filterByStatus()"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"Handler composes one or more VO / Collections into a View Model for presentation"}),"\n",(0,t.jsx)(n.li,{children:"Controller or template renders View Model without further mutation"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"rules--constraints",children:"Rules & Constraints"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Value Objects MUST NOT expose public mutable properties"}),"\n",(0,t.jsx)(n.li,{children:"Static constructors MUST validate required mandatory fields and throw domain exceptions when absent"}),"\n",(0,t.jsx)(n.li,{children:"Collections SHOULD provide only domain-relevant helpers (avoid generic LINQ-style sprawl)"}),"\n",(0,t.jsx)(n.li,{children:"View Models MUST derive solely from Value Objects (no raw payload mixing)"}),"\n",(0,t.jsx)(n.li,{children:"Dates MUST be converted to immutable date/time objects before VO storage"}),"\n",(0,t.jsx)(n.li,{children:"Optional fields SHOULD use explicit nullable types instead of sentinel values"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"minimal-example",children:"Minimal Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"final class MemberProfileVO {\n    private function __construct(private string $id, private string $name, private string $email) {}\n    public static function fromApiResponse(array $data): self {\n        foreach (['id','full_name','email'] as $f) if (!isset($data[$f])) throw new InvalidMemberPayload($f);\n        return new self(\n            (string)$data['id'],\n            trim($data['full_name']),\n            strtolower($data['email'])\n        );\n    }\n    public function toArray(): array { return ['id'=>$this->id,'name'=>$this->name,'email'=>$this->email]; }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"common-pitfalls",children:"Common Pitfalls"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Allowing view templates to parse raw JSON directly"}),"\n",(0,t.jsx)(n.li,{children:"Duplicating field normalization logic across multiple handlers"}),"\n",(0,t.jsx)(n.li,{children:"Creating overly broad \u201cgod\u201d Value Objects combining unrelated concerns"}),"\n",(0,t.jsx)(n.li,{children:"Omitting nullability checks for optional API fields"}),"\n",(0,t.jsxs)(n.li,{children:["Re-exporting raw arrays instead of providing ",(0,t.jsx)(n.code,{children:"toArray()"})," methods"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/brs-rmm-ai-documentation/docs/Data-model/value-objects",children:"Value Objects"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/brs-rmm-ai-documentation/docs/Patterns/commands-and-handlers",children:"Commands & Handlers"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/brs-rmm-ai-documentation/docs/Frontend/frontend-architecture",children:"Frontend Architecture"})}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>r});var a=i(6540);const t={},s=a.createContext(t);function l(e){const n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);
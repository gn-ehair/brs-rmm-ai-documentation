"use strict";(globalThis.webpackChunkmydocs=globalThis.webpackChunkmydocs||[]).push([[2451],{4257:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Foundations/multi-tenancy","title":"Multi-Tenancy","description":"Purpose","source":"@site/docs/Foundations/multi-tenancy.md","sourceDirName":"Foundations","slug":"/Foundations/multi-tenancy","permalink":"/brs-rmm-ai-documentation/docs/Foundations/multi-tenancy","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Foundations/multi-tenancy.md","tags":[{"inline":true,"label":"multi-tenancy","permalink":"/brs-rmm-ai-documentation/docs/tags/multi-tenancy"},{"inline":true,"label":"club-isolation","permalink":"/brs-rmm-ai-documentation/docs/tags/club-isolation"},{"inline":true,"label":"data-separation","permalink":"/brs-rmm-ai-documentation/docs/tags/data-separation"},{"inline":true,"label":"tenant-management","permalink":"/brs-rmm-ai-documentation/docs/tags/tenant-management"}],"version":"current","lastUpdatedBy":"Hair","lastUpdatedAt":1761836475000,"frontMatter":{"status":"draft","lastReviewed":"2025-10-08T00:00:00.000Z","owner":"members-module-team","category":"foundations","tags":["multi-tenancy","club-isolation","data-separation","tenant-management"]},"sidebar":"foundationsSidebar","previous":{"title":"Conventions","permalink":"/brs-rmm-ai-documentation/docs/Foundations/conventions"},"next":{"title":"Request Lifecycle","permalink":"/brs-rmm-ai-documentation/docs/Foundations/request-lifecycle"}}');var s=i(4848),l=i(8453);const a={status:"draft",lastReviewed:new Date("2025-10-08T00:00:00.000Z"),owner:"members-module-team",category:"foundations",tags:["multi-tenancy","club-isolation","data-separation","tenant-management"]},o="Multi-Tenancy",r={},c=[{value:"Purpose",id:"purpose",level:2},{value:"When You Need This",id:"when-you-need-this",level:2},{value:"Context / Diagram",id:"context--diagram",level:2},{value:"Key Concepts",id:"key-concepts",level:2},{value:"Flow / Sequence",id:"flow--sequence",level:2},{value:"Rules &amp; Constraints",id:"rules--constraints",level:2},{value:"Minimal Example",id:"minimal-example",level:2},{value:"Common Pitfalls",id:"common-pitfalls",level:2},{value:"See Also",id:"see-also",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"multi-tenancy",children:"Multi-Tenancy"})}),"\n",(0,s.jsx)(n.h2,{id:"purpose",children:"Purpose"}),"\n",(0,s.jsx)(n.p,{children:"Define how every operation remains strictly scoped to a single club, preventing cross-club data leakage and ensuring consistent caching and authorization behavior."}),"\n",(0,s.jsx)(n.h2,{id:"when-you-need-this",children:"When You Need This"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Implementing a new repository call"}),"\n",(0,s.jsx)(n.li,{children:"Auditing security or data isolation"}),"\n",(0,s.jsx)(n.li,{children:"Debugging unexpected data appearing for a member"}),"\n",(0,s.jsx)(n.li,{children:"Reviewing cache key formats including club identifiers"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"context--diagram",children:"Context / Diagram"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Session \u2192 Club Context\n             \u2193\nController \u2192 Command \u2192 Handler \u2192 Repository(clubId, ...)\n                                   \u2193\n                               Cache Key (club:...)\n                                   \u2193\n                                 BRS API\n"})}),"\n",(0,s.jsx)(n.h2,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Club Context Source: Established during authentication & stored in session"}),"\n",(0,s.jsx)(n.li,{children:"Mandatory Propagation: clubId travels through command \u2192 handler \u2192 repository"}),"\n",(0,s.jsx)(n.li,{children:"Isolation by Keying: Redis keys embed clubId prefix to avoid collisions/leaks"}),"\n",(0,s.jsx)(n.li,{children:"Validation: Early rejection if missing or mismatched clubId"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"flow--sequence",children:"Flow / Sequence"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Authentication sets session club identifier"}),"\n",(0,s.jsx)(n.li,{children:"Controller fetches clubId and injects into Command"}),"\n",(0,s.jsx)(n.li,{children:"Handler asserts clubId not empty / not placeholder"}),"\n",(0,s.jsx)(n.li,{children:"Repository receives clubId as first parameter"}),"\n",(0,s.jsx)(n.li,{children:"Repository composes outbound URL path including club segment"}),"\n",(0,s.jsxs)(n.li,{children:["Cache key prefixed with ",(0,s.jsx)(n.code,{children:"club:{clubId}"})," guaranteeing isolation"]}),"\n",(0,s.jsx)(n.li,{children:"Response mapped to Value Objects (clubId retained where relevant)"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"rules--constraints",children:"Rules & Constraints"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["All cache keys MUST begin with ",(0,s.jsx)(n.code,{children:"club:{clubId}:"})]}),"\n",(0,s.jsx)(n.li,{children:"Handlers MUST reject commands lacking clubId before any repository call"}),"\n",(0,s.jsx)(n.li,{children:"Repositories MUST NOT infer clubId from global state (only explicit parameter)"}),"\n",(0,s.jsx)(n.li,{children:"Tests SHOULD include negative case (different clubId cannot access data)"}),"\n",(0,s.jsx)(n.li,{children:"View Models SHOULD exclude internal club identifiers unless required by UI"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"minimal-example",children:"Minimal Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"if (empty($command->clubId())) {\n    throw new ClubContextMissing('Club context required');\n}\n$profile = $memberRepo->fetchProfile($command->clubId(), $command->memberId());\n"})}),"\n",(0,s.jsx)(n.h2,{id:"common-pitfalls",children:"Common Pitfalls"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Deriving clubId indirectly from a memberId assumption"}),"\n",(0,s.jsx)(n.li,{children:"Forgetting to include clubId in newly added repository methods"}),"\n",(0,s.jsx)(n.li,{children:"Using inconsistent letter case in cache keys (should stay as provided)"}),"\n",(0,s.jsx)(n.li,{children:"Logging sensitive club identifiers without redaction policy"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/brs-rmm-ai-documentation/docs/Patterns/repository-and-caching-strategy",children:"Repository & Caching Strategy"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/brs-rmm-ai-documentation/docs/Foundations/security-overview",children:"Security Overview"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/brs-rmm-ai-documentation/docs/Foundations/system-architecture",children:"System Architecture"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var t=i(6540);const s={},l=t.createContext(s);function a(e){const n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);
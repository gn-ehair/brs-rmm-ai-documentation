"use strict";(globalThis.webpackChunkmydocs=globalThis.webpackChunkmydocs||[]).push([[709],{990:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Foundations/conventions","title":"Conventions","description":"Purpose","source":"@site/docs/Foundations/conventions.md","sourceDirName":"Foundations","slug":"/Foundations/conventions","permalink":"/brs-rmm-ai-documentation/docs/Foundations/conventions","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Foundations/conventions.md","tags":[{"inline":true,"label":"coding-standards","permalink":"/brs-rmm-ai-documentation/docs/tags/coding-standards"},{"inline":true,"label":"naming-conventions","permalink":"/brs-rmm-ai-documentation/docs/tags/naming-conventions"},{"inline":true,"label":"style-guide","permalink":"/brs-rmm-ai-documentation/docs/tags/style-guide"},{"inline":true,"label":"best-practices","permalink":"/brs-rmm-ai-documentation/docs/tags/best-practices"}],"version":"current","lastUpdatedBy":"Hair","lastUpdatedAt":1761836475000,"frontMatter":{"status":"draft","lastReviewed":"2025-10-08T00:00:00.000Z","owner":"members-module-team","category":"foundations","tags":["coding-standards","naming-conventions","style-guide","best-practices"]},"sidebar":"foundationsSidebar","previous":{"title":"Command Pattern with Tactician","permalink":"/brs-rmm-ai-documentation/docs/Foundations/command-pattern"},"next":{"title":"Multi-Tenancy","permalink":"/brs-rmm-ai-documentation/docs/Foundations/multi-tenancy"}}');var t=s(4848),o=s(8453);const a={status:"draft",lastReviewed:new Date("2025-10-08T00:00:00.000Z"),owner:"members-module-team",category:"foundations",tags:["coding-standards","naming-conventions","style-guide","best-practices"]},r="Conventions",l={},c=[{value:"Purpose",id:"purpose",level:2},{value:"When You Need This",id:"when-you-need-this",level:2},{value:"Context / Diagram",id:"context--diagram",level:2},{value:"Key Concepts",id:"key-concepts",level:2},{value:"Rules &amp; Constraints",id:"rules--constraints",level:2},{value:"Common Pitfalls",id:"common-pitfalls",level:2},{value:"See Also",id:"see-also",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"conventions",children:"Conventions"})}),"\n",(0,t.jsx)(n.h2,{id:"purpose",children:"Purpose"}),"\n",(0,t.jsx)(n.p,{children:"Ensure consistent, predictable code and documentation patterns that reinforce API\u2011first, command-driven design and club isolation."}),"\n",(0,t.jsx)(n.h2,{id:"when-you-need-this",children:"When You Need This"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Creating a new Command / Handler pair"}),"\n",(0,t.jsx)(n.li,{children:"Adding a Repository method"}),"\n",(0,t.jsx)(n.li,{children:"Naming a Value Object or View Model"}),"\n",(0,t.jsx)(n.li,{children:"Reviewing a pull request for style adherence"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"context--diagram",children:"Context / Diagram"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Intent (Command) \u2192 Execution (Handler) \u2192 Data Access (Repository) \u2192 Value Objects \u2192 View Model\n"})}),"\n",(0,t.jsx)(n.h2,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Intent vs Execution: Separate what we want from how we do it"}),"\n",(0,t.jsx)(n.li,{children:"Immutable Domain: Value Objects never mutate post-construction"}),"\n",(0,t.jsx)(n.li,{children:"Narrow Controllers: Thin adapters, not mini-handlers"}),"\n",(0,t.jsx)(n.li,{children:"Deterministic Caching: Uniform key schema across repositories"}),"\n",(0,t.jsx)(n.li,{children:"Explicit Club Scope: Always first parameter / property where relevant"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"rules--constraints",children:"Rules & Constraints"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Class Names MUST use PascalCase; file name MUST match class"}),"\n",(0,t.jsxs)(n.li,{children:["Value Objects MUST have static named constructors (e.g. ",(0,t.jsx)(n.code,{children:"fromApiResponse()"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Command classes MUST end with ",(0,t.jsx)(n.code,{children:"Command"}),"; Handler classes MUST end with ",(0,t.jsx)(n.code,{children:"Handler"})]}),"\n",(0,t.jsxs)(n.li,{children:["Repositories MUST implement an interface placed under ",(0,t.jsx)(n.code,{children:"Repository/"})]}),"\n",(0,t.jsx)(n.li,{children:"Public methods in repositories MUST accept club identifier explicitly"}),"\n",(0,t.jsx)(n.li,{children:"Twig templates SHOULD avoid business logic (formatting / presentation only)"}),"\n",(0,t.jsxs)(n.li,{children:["Frontend events MUST use kebab-case names (",(0,t.jsx)(n.code,{children:"member-updated"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"Cache keys MUST NOT be hand-rolled outside repository layer"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"common-pitfalls",children:"Common Pitfalls"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Adding validation logic to Value Object constructors (prefer factories)"}),"\n",(0,t.jsx)(n.li,{children:"Leaking raw API arrays into handlers or views"}),"\n",(0,t.jsx)(n.li,{children:"Overloading a single Handler with multiple unrelated operations"}),"\n",(0,t.jsx)(n.li,{children:"Mixing synchronous DOM manipulation with Vue state without emitting events"}),"\n",(0,t.jsxs)(n.li,{children:["Divergent naming for identical concepts (",(0,t.jsx)(n.code,{children:"MemberProfileVO"})," vs ",(0,t.jsx)(n.code,{children:"ProfileValueObject"}),")"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/brs-rmm-ai-documentation/docs/glossary",children:"Glossary"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/brs-rmm-ai-documentation/docs/Foundations/system-architecture",children:"System Architecture"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/brs-rmm-ai-documentation/docs/Patterns/commands-and-handlers",children:"Commands & Handlers"})}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var i=s(6540);const t={},o=i.createContext(t);function a(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);
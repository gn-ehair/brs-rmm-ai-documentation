"use strict";(globalThis.webpackChunkmydocs=globalThis.webpackChunkmydocs||[]).push([[5516],{6087:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"Patterns/repository-and-caching-strategy","title":"Repository and Caching Strategy","description":"Purpose","source":"@site/docs/Patterns/repository-and-caching-strategy.md","sourceDirName":"Patterns","slug":"/Patterns/repository-and-caching-strategy","permalink":"/brs-rmm-ai-documentation/docs/Patterns/repository-and-caching-strategy","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Patterns/repository-and-caching-strategy.md","tags":[{"inline":true,"label":"repository-pattern","permalink":"/brs-rmm-ai-documentation/docs/tags/repository-pattern"},{"inline":true,"label":"caching-strategy","permalink":"/brs-rmm-ai-documentation/docs/tags/caching-strategy"},{"inline":true,"label":"data-access","permalink":"/brs-rmm-ai-documentation/docs/tags/data-access"},{"inline":true,"label":"redis","permalink":"/brs-rmm-ai-documentation/docs/tags/redis"},{"inline":true,"label":"performance","permalink":"/brs-rmm-ai-documentation/docs/tags/performance"}],"version":"current","lastUpdatedBy":"Hair","lastUpdatedAt":1761836475000,"frontMatter":{"status":"draft","lastReviewed":"2025-10-08T00:00:00.000Z","owner":"members-module-team","category":"patterns","tags":["repository-pattern","caching-strategy","data-access","redis","performance"]},"sidebar":"patternsSidebar","previous":{"title":"Commands and Handlers","permalink":"/brs-rmm-ai-documentation/docs/Patterns/commands-and-handlers"}}');var t=r(4848),s=r(8453);const a={status:"draft",lastReviewed:new Date("2025-10-08T00:00:00.000Z"),owner:"members-module-team",category:"patterns",tags:["repository-pattern","caching-strategy","data-access","redis","performance"]},l="Repository and Caching Strategy",c={},o=[{value:"Purpose",id:"purpose",level:2},{value:"When You Need This",id:"when-you-need-this",level:2},{value:"Context / Diagram",id:"context--diagram",level:2},{value:"Key Concepts",id:"key-concepts",level:2},{value:"Flow / Sequence",id:"flow--sequence",level:2},{value:"Rules &amp; Constraints",id:"rules--constraints",level:2},{value:"Minimal Example",id:"minimal-example",level:2},{value:"Common Pitfalls",id:"common-pitfalls",level:2},{value:"See Also",id:"see-also",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"repository-and-caching-strategy",children:"Repository and Caching Strategy"})}),"\n",(0,t.jsx)(n.h2,{id:"purpose",children:"Purpose"}),"\n",(0,t.jsx)(n.p,{children:"Explain how repositories encapsulate outbound HTTP integration with the BRS API, enforce club scoping, and apply consistent Redis caching for performance and resilience."}),"\n",(0,t.jsx)(n.h2,{id:"when-you-need-this",children:"When You Need This"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Adding a new external API call"}),"\n",(0,t.jsx)(n.li,{children:"Optimizing latency hotspots"}),"\n",(0,t.jsx)(n.li,{children:"Reviewing cache TTL or invalidation approach"}),"\n",(0,t.jsx)(n.li,{children:"Auditing data flow for multi-tenancy correctness"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"context--diagram",children:"Context / Diagram"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Handler \u2192 Repository \u2192 (Redis Cache) \u2192 BRS API \u2192 Map \u2192 Value Objects\n                     \u2198 cache store \u2197\n"})}),"\n",(0,t.jsx)(n.h2,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Repository Interface: Contract consumed by handlers (promotes test doubles)"}),"\n",(0,t.jsx)(n.li,{children:"Cache Aside: Check cache first, populate on miss"}),"\n",(0,t.jsx)(n.li,{children:"Deterministic Key Schema: Prevent collisions & ease debugging"}),"\n",(0,t.jsx)(n.li,{children:"TTL Strategy: Balance freshness vs performance (short for mutable, longer for static config)"}),"\n",(0,t.jsx)(n.li,{children:"Error Translation: Transport errors mapped to domain-level exceptions"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"flow--sequence",children:"Flow / Sequence"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Handler calls repository method with club context + identifiers"}),"\n",(0,t.jsx)(n.li,{children:"Repository builds cache key (see schema) and attempts Redis read"}),"\n",(0,t.jsx)(n.li,{children:"Cache hit \u2192 hydrate Value Object(s) \u2192 return"}),"\n",(0,t.jsx)(n.li,{children:"Cache miss \u2192 perform Guzzle request to BRS API endpoint"}),"\n",(0,t.jsx)(n.li,{children:"Validate & map JSON \u2192 Value Object(s)"}),"\n",(0,t.jsx)(n.li,{children:"Store serialized representation under key with appropriate TTL"}),"\n",(0,t.jsx)(n.li,{children:"Return hydrated Value Object(s)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"rules--constraints",children:"Rules & Constraints"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["All keys MUST follow canonical schema: ",(0,t.jsx)(n.code,{children:"club:{clubId}:{resource}:{scopedIdentifier}[:variant]"})]}),"\n",(0,t.jsx)(n.li,{children:"Repositories MUST NOT leak raw HTTP client responses"}),"\n",(0,t.jsx)(n.li,{children:"Cache TTLs SHOULD be declared as constants near repository top"}),"\n",(0,t.jsx)(n.li,{children:"Invalidation MUST occur via explicit methods (no ad-hoc key guessing)"}),"\n",(0,t.jsx)(n.li,{children:"Repository methods MUST accept clubId as first argument (after $this)"}),"\n",(0,t.jsx)(n.li,{children:"Failures SHOULD raise domain exceptions, not return null silently"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"minimal-example",children:"Minimal Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:'final class MemberRepositoryImpl implements MemberRepository {\n    private const TTL_PROFILE = 300; // seconds\n    public function __construct(private Client $http, private Cache $cache) {}\n    public function fetchProfile(string $clubId, string $memberId): MemberProfileVO {\n        $key = "club:$clubId:member:profile:$memberId";\n        if ($cached = $this->cache->get($key)) {\n            return MemberProfileVO::fromCache($cached);\n        }\n        $resp = $this->http->get("/clubs/$clubId/members/$memberId");\n        $vo = MemberProfileVO::fromApiResponse($resp->toArray());\n        $this->cache->set($key, $vo->toArray(), self::TTL_PROFILE);\n        return $vo;\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"common-pitfalls",children:"Common Pitfalls"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Divergent key formats causing cache fragmentation"}),"\n",(0,t.jsx)(n.li,{children:"Excessive TTL leading to stale user-facing data"}),"\n",(0,t.jsx)(n.li,{children:"Injecting HTTP client directly into handlers bypassing repository abstraction"}),"\n",(0,t.jsx)(n.li,{children:"Caching error responses or partial payloads"}),"\n",(0,t.jsx)(n.li,{children:"Silent failures returning null instead of raising a domain exception"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/brs-rmm-ai-documentation/docs/Foundations/multi-tenancy",children:"Multi-Tenancy"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/brs-rmm-ai-documentation/docs/Quality/error-and-resilience",children:"Error and Resilience"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/brs-rmm-ai-documentation/docs/Quality/performance-and-observability",children:"Performance and Observability"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>l});var i=r(6540);const t={},s=i.createContext(t);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);
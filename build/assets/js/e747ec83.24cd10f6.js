"use strict";(globalThis.webpackChunkmydocs=globalThis.webpackChunkmydocs||[]).push([[7051],{3583:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"glossary","title":"Glossary","description":"Command \u2013 Object representing an intent; contains only data needed for execution.","source":"@site/docs/glossary.md","sourceDirName":".","slug":"/glossary","permalink":"/brs-rmm-ai-documentation/docs/glossary","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/glossary.md","tags":[{"inline":true,"label":"glossary","permalink":"/brs-rmm-ai-documentation/docs/tags/glossary"},{"inline":true,"label":"terminology","permalink":"/brs-rmm-ai-documentation/docs/tags/terminology"},{"inline":true,"label":"definitions","permalink":"/brs-rmm-ai-documentation/docs/tags/definitions"},{"inline":true,"label":"reference","permalink":"/brs-rmm-ai-documentation/docs/tags/reference"}],"version":"current","lastUpdatedBy":"Hair","lastUpdatedAt":1761835238000,"frontMatter":{"status":"draft","lastReviewed":"2025-10-08T00:00:00.000Z","owner":"members-module-team","category":"foundations","tags":["glossary","terminology","definitions","reference"]},"sidebar":"overviewSidebar","previous":{"title":"Directory Structure","permalink":"/brs-rmm-ai-documentation/docs/directory-structure"}}');var o=n(4848),a=n(8453);const s={status:"draft",lastReviewed:new Date("2025-10-08T00:00:00.000Z"),owner:"members-module-team",category:"foundations",tags:["glossary","terminology","definitions","reference"]},i="Glossary",c={},l=[];function d(e){const t={h1:"h1",header:"header",p:"p",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"glossary",children:"Glossary"})}),"\n",(0,o.jsx)(t.p,{children:"Command \u2013 Object representing an intent; contains only data needed for execution.\nHandler \u2013 Executes a specific Command by orchestrating repositories and services.\nRepository \u2013 Abstraction wrapping outbound API calls plus caching and mapping.\nValue Object \u2013 Immutable domain representation created from external API data.\nView Model \u2013 Data prepared for templates or JSON responses, derived from Value Objects.\nClub Context \u2013 Scope identifier ensuring operations apply to exactly one club.\nBRS API \u2013 External authoritative service providing member and booking data.\nCache Key \u2013 Deterministic Redis key following the canonical schema.\nSession \u2013 Server-side state holding authenticated member + club context.\nDOM Event \u2013 Custom browser event used for decoupled component communication.\nFeature Golden Path \u2013 Prescribed minimal steps to implement a typical feature.\nResilience \u2013 Ability to degrade gracefully under partial failures or latency."})]})}function m(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>i});var r=n(6540);const o={},a=r.createContext(o);function s(e){const t=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);